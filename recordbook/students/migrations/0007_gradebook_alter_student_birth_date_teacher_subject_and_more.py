# Generated by Django 4.2.2 on 2023-09-04 15:26

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('students', '0006_alter_student_slug'),
    ]

    operations = [
        migrations.CreateModel(
            name='Gradebook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата')),
                ('mark', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='Оценка')),
            ],
            options={
                'verbose_name': 'Оценка',
                'verbose_name_plural': 'Оценки',
            },
        ),
        migrations.AlterField(
            model_name='student',
            name='birth_date',
            field=models.DateField(default=datetime.date(1975, 9, 5), verbose_name='Дата Рождения'),
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('middle_name', models.CharField(max_length=50, verbose_name='Отчество')),
                ('gender', models.CharField(choices=[('M', 'Мужской'), ('F', 'Женский')], max_length=1, verbose_name='Пол')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='e-mail')),
                ('birth_date', models.DateField(default=datetime.date(1975, 9, 5), verbose_name='Дата Рождения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('photo', models.ImageField(upload_to='photos/%Y/%m/%d', verbose_name='Фото')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Преподователь',
                'verbose_name_plural': 'Преподователи',
                'ordering': ['last_name', 'first_name', 'middle_name'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Предмет')),
                ('groups', models.ManyToManyField(to='students.group', verbose_name='Группы')),
                ('students', models.ManyToManyField(through='students.Gradebook', to='students.student', verbose_name='Студенты')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_subjects', to='students.teacher', verbose_name='Преподователь')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
            },
        ),
        migrations.AddField(
            model_name='gradebook',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.student', verbose_name='Студент'),
        ),
        migrations.AddField(
            model_name='gradebook',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.subject', verbose_name='Предмет'),
        ),
    ]
